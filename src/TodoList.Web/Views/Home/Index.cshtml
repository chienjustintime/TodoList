@{
    ViewBag.Title = "Home Page";
}
@section styles{
    <style>
        .jumbotron {
            margin-bottom: 10px;
        }
        .content-row {
             overflow-y: auto;
            max-height: calc(100vh - 450px);
            min-height:200px;
        }

        footer {
          text-align: center;
        }

        .list-item {
          display: flex;
        }
        .list-item p {
            flex: 7 0;
            word-wrap: break-word;
            min-width: 0;
            margin: 5px auto;
        }
        .list-item .list-item-cmdgroup{
            flex: 1 0;
            justify-content:center;
            display: flex;
        }

        .list-item-cmd {
          margin-bottom:10px;
        }

        .alert-anchor {
            position: fixed;
            right: 0;
            left: 0;
            border-width: 0 0 1px;
            z-index:1042;
        }
       
         .modal {
            overflow-y:unset;
        }
        .modal-dialog {
            margin: 200px auto;
        }
        body.modal-open, .modal-open .navbar-fixed-top, .modal-open .navbar-fixed-bottom {
             margin: 0;
        }
    </style>
}

<div id="alertarea" class="alert-anchor"></div>

<div class="jumbotron">
    <h1>TodoList</h1>
    <p class="lead">todo list app with CRUD features</p>
</div>

<div class="row">
    <div class="col-md-2 col-md-offset-10">
        <button type="button" class="btn btn-primary btn-lg btn-block list-item-cmd list-item-add" data-toggle="modal" data-target="#createModal">Create</button>
    </div>
</div>

<div class="row content-row">
    <div class="col-md-12">
        <ul class="list-group customlist" id="todolist">

        </ul>
    </div>
</div>


<div class="modal fade" id="createModal" tabindex="-1" role="dialog" aria-labelledby="createModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title" id="createModalLongTitle">新建</h5>
            </div>
            <div class="modal-body">
                <form id="create-todolistItem-form">
                    <div class="form-group">
                        <label for="create-todolistitem-name" class="control-label">名稱</label>
                        <input type="text" class="form-control" id="create-todolistitem-name" placeholder="請輸入名稱...">
                    </div>
                </form>              
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="saveTodoListItemBtn">Save changes</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h5 class="modal-title" id="editModalLongTitle">編輯</h5>
            </div>
            <div class="modal-body">
                <form id="edit-todolistItem-form">
                    <div class="form-group" style="display:none">
                        <label for="edit-todolistitem-id" class="control-label">Id</label>
                        <input type="text" class="form-control" id="edit-todolistitem-id" readonly>
                    </div>
                    <div class="form-group">
                        <label for="edit-todolistitem-name" class="control-label">名稱</label>
                        <input type="text" class="form-control" id="edit-todolistitem-name" placeholder="請輸入名稱...">
                    </div>
                </form>   
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="updateTodoListItemBtn">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    
    <script>
        //namespace
        var todolist = {
            id: "todolist",
            url: {
                read: "@Url.Action("GetAll","TodoListItem")",
                save: "@Url.Action("Create", "TodoListItem")",
                update: "@Url.Action("Update", "TodoListItem")",
                destroy: "@Url.Action("Delete", "TodoListItem")"
            },
            alertTypeList:["success", "info", "warning", "danger"]
        };

        function initTodoListItems(){
            emptyListItems();
            getTodoListItems();
        }

        //ajax-callback
        function getTodoListItems() {
            $.ajax({
                url: todolist.url.read,
                success: function (result) {
                    createListItems(todolist.id, result.data);
                }
            });
        }

        function saveListItem(todoListItem) {
            var params = Object.assign({}, todoListItem);
            $.ajax({
                method: "Post",
                data: params,
                url: todolist.url.save,
                success: function (result) {
                    if (result.IsSuccess)
                    {
                        createListItems(todolist.id, [result.Data]);
                        showAlert("success", "create success!");

                        //modal behavior
                        $('#createModal').modal('hide');
                        var $form = $("#create-todolistItem-form");
                        if ($form.length !== 0)
                        {
                            $form[0].reset();
                        }
                    }
                    else
                    {
                        showAlert("danger", "create fail!");
                    }
                }
            });
        }


        function updateListItem(todoListItem) {
            var params = Object.assign({}, todoListItem);
            $.ajax({
                method: "Post",
                data: params,
                url: todolist.url.update,
                success: function (result) {
                    if (result.IsSuccess) {
                      
                        showAlert("success", "update success!");
                        editListItem(todoListItem);
                        //modal behavior
                        $('#editModal').modal('hide');
                    }
                    else {
                        showAlert("danger", "update fail!");
                    }
                }
            });
        }

        function deleteListItem(todoListItem) {
            var params = Object.assign({}, todoListItem);
            $.ajax({
                method: "Post",
                data: params,
                url: todolist.url.destroy,
                success: function (result) {
                    if (result.IsSuccess) {
                        deleteListItems([todoListItem]);
                        showAlert("success", "delete success!");
                    }
                    else {
                        showAlert("danger", "delete fail!");
                    }
                }
            });
        }

        //client-side
        function createListItems(listId,data) {
            var listItemsHtml= data.map(function(i){
                var itemHtml = '<li id="' + i.Id + '" class="list-group-item list-item">'+
                                    '<p>' + i.Name + '</p>'+
                                    '<div class="list-item-cmdgroup">'+
                                            '<span class="btn btn-light glyphicon glyphicon-pencil list-item-edit" data-toggle="modal" data-target="#editModal"></span>' +
                                            '<span class="btn btn-light glyphicon glyphicon-remove list-item-remove"></span>' +
                                    '</div>'+
                                '</li>';
                return itemHtml;
            });
            $("#" + listId).prepend(listItemsHtml);
        }

        function deleteListItems(data) {
            data.forEach(function (i) {
                $("#" + i.Id).remove()
            });
        }

        function emptyListItems(listId) {
            $("#"+listId).empty("");
        }

        function editListItem(listItem) {
            var $nameElement = $("#" + listItem.Id).children("p");
            $nameElement.html(listItem.Name);
        }

        //alert
        function showAlert(type, msg) {
            var typelist = todolist.alertTypeList;
            var typeIndex = typelist.indexOf(type);
            if (typeIndex < 0) {
                return;
            }

            var alertType = 'alert-' + typelist[typeIndex];
            var alertHtml = '<div class="alert alert-dismissible ' + alertType + '" role="alert">' +
                                '<p>'+msg+ '</p>'
                                '<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>' +
                                '<strong>Warning!</strong> Better check yourself, you\'re not looking too good.' +
                            '</div>';
             $("#alertarea").html(alertHtml);

             setTimeout(hideAlert, 3000);
        }

        function hideAlert() {
            $(".alert").alert('close');
        }

        $(document).ready(function () {
            initTodoListItems();

            $("#saveTodoListItemBtn").on("click", function () {
                var todoListItemName = $("#create-todolistitem-name").val();
                if (todoListItemName==="") {

                    showAlert("warning", "please type todolist item's name");
                    return;
                }
                var params = {
                    Name: todoListItemName
                };

                saveListItem(params);

            });

            $("#todolist").on("click", ".list-item-remove", function (e) {
                var isDeleteConfirm = confirm("Are you sure you want to delete this item?");
                if (!isDeleteConfirm)
                {
                    return;
                }
                var $todoListItemElement = $(e.target).parents(".list-item");
                if ($todoListItemElement.length===0) {
                    return;            
                }

                ////front end validation
                var params = {
                    Id:$todoListItemElement[0].id,
                };
         
                deleteListItem(params);

            });

            $('#editModal').on('show.bs.modal', function (event) {

                var $button = $(event.relatedTarget)
                var $todoListItemElement = $button.parents(".list-item");
                if ($todoListItemElement.length === 0) {
                    return;
                }
                var id = $todoListItemElement[0].id;
                var name = $todoListItemElement.find("p");
                $("#edit-todolistitem-name").val(name.text());
                $("#edit-todolistitem-id").val(id);

                
            });

            $("#updateTodoListItemBtn").on("click", function () {
                var todoListItemName = $("#edit-todolistitem-name").val();
                if (todoListItemName === "") {

                    showAlert("warning", "please type todolist item's name");
                    return;
                }

                var params = {
                    Id:  $("#edit-todolistitem-id").val(),
                    Name: todoListItemName
                };

                updateListItem(params);
            });

            $('form').submit(false);
        });
    </script>
        
}